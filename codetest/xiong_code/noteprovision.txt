numpy :
    内部结构：
            1.指向数据的指针
            2.dtype 描述数据类型
            3.shape 元组
            4.stride为了前进到下一个元素的值
            numpy.array(object, dtype = None, order = None, ndmin = 0)
            object 为我们的数组或嵌套的数列
    数据类型对象dtype：
        用于定义自定义的数据类型对象
    属性：
        ndim：维度的数量
        shape 数组的维度    还可以用reshape 来调整大小
        size  元素总个数
        dtype 元素类型
    生成：
        numpy.arange(start，stop，step) 在范围内按步长生成矩阵
        numpy.linspace（start，stop，num） 生成一维数组 由等差数列构成
        numpy.logspace（start，stop，num） 生成一维数组 由等比数列构成

    切片：
        print (a[...,1])   # 第2列元素
    高级索引：
        y = x[[0,1,2],  [0,1,0]]   （0,0） （1,1），（2,0）位置
        组合使用 c = a[1:3,[1,2]] 第二行 第三行的 第二 三个元素
    迭代数组：
        a与a.T在内存中存储一致
        迭代 x in np.nditer(a) 默认按行迭代 可以强制指定
        修改：默认只读模式，如果要修改 要更改参数 op_flags 值为 'readwrite' 或 'write_only'
        不同类型迭代 参数flags 有值 external_loop 给出的值是一维数组  能按列来 但是按行是一个一维数组
        一维展开：ndarray.flat 对象 能作为迭代器进行一维输出
                ndarray.flatten（order） 能给出数组拷贝
                a.ravel() 给出reference 会改变原始数组 但是原始数组形状不变
    数组变换：
        转置 ndarray.T 
        降维 numpy.squeeze(arr,axis) axis指定某一维
        按现有维连接：np.concatenate((x,y,z...),axis)
        切分数组 numpy.split(ary,indices_or_sections,axis) indices_or_sections 整数 划分整数等分 
            数组按元素位置分 axis指定哪一维
        添加元素 numpy.append(arr,values,axis=None) 当为None时，返回的是一维数组并在末尾添加
            numpy.insert(arr,obj,values,axis) obj插入前的索引 axis 指定维度
        去除元素 numpy.delete(arr,obj,values,axis)
    数学函数：
        舍入 numpy.around() floor 取底 ceil 取顶
        amin(array,axis) axis指定哪一维 amax  mean() 均值 可以指定维数 方差 var
